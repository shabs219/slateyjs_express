{"version":3,"file":"hocuspocus-logger.cjs","sources":["../src/Logger.ts"],"sourcesContent":["import {\n  Extension,\n  onChangePayload,\n  onConfigurePayload,\n  onConnectPayload,\n  onLoadDocumentPayload,\n  onDestroyPayload,\n  onDisconnectPayload,\n  onRequestPayload,\n  onUpgradePayload,\n} from '@hocuspocus/server'\n\nexport interface LoggerConfiguration {\n  /**\n   * Prepend all logging message with a string.\n   *\n   * @deprecated\n   */\n  prefix: null | string,\n  /**\n   * Whether to log something for the `onLoadDocument` hook.\n   */\n  onLoadDocument: boolean,\n  /**\n   * Whether to log something for the `onChange` hook.\n   */\n  onChange: boolean,\n  /**\n   * Whether to log something for the `onStoreDocument` hook.\n   */\n   onStoreDocument: boolean,\n  /**\n   * Whether to log something for the `onConnect` hook.\n   */\n  onConnect: boolean,\n  /**\n   * Whether to log something for the `onDisconnect` hook.\n   */\n  onDisconnect: boolean,\n  /**\n   * Whether to log something for the `onUpgrade` hook.\n   */\n  onUpgrade: boolean,\n  /**\n   * Whether to log something for the `onRequest` hook.\n   */\n  onRequest: boolean,\n  /**\n   * Whether to log something for the `onDestroy` hook.\n   */\n  onDestroy: boolean,\n  /**\n   * Whether to log something for the `onConfigure` hook.\n   */\n  onConfigure: boolean,\n  /**\n   * A log function, if none is provided output will go to console\n   */\n  log: (...args: any[]) => void,\n}\n\nexport class Logger implements Extension {\n  name: string | null = null\n\n  configuration: LoggerConfiguration = {\n    prefix: null,\n    onLoadDocument: true,\n    onChange: true,\n    onStoreDocument: true,\n    onConnect: true,\n    onDisconnect: true,\n    onUpgrade: true,\n    onRequest: true,\n    onDestroy: true,\n    onConfigure: true,\n    log: console.log, // eslint-disable-line\n  }\n\n  /**\n   * Constructor\n   */\n  constructor(configuration?: Partial<LoggerConfiguration>) {\n    this.configuration = {\n      ...this.configuration,\n      ...configuration,\n    }\n  }\n\n  async onConfigure(data: onConfigurePayload) {\n    this.name = data.instance.configuration.name\n\n    if (!this.configuration.onConfigure) {\n      return\n    }\n\n    if (this.configuration.prefix) {\n      console.warn('[hocuspocus warn] The Logger \\'prefix\\' is deprecated. Pass a \\'name\\' to the Hocuspocus configuration instead.')\n    }\n  }\n\n  async onLoadDocument(data: onLoadDocumentPayload) {\n    if (this.configuration.onLoadDocument) {\n      this.log(`Loaded document \"${data.documentName}\".`)\n    }\n  }\n\n  async onChange(data: onChangePayload) {\n    if (this.configuration.onChange) {\n      this.log(`Document \"${data.documentName}\" changed.`)\n    }\n  }\n\n  async onStoreDocument(data: onDisconnectPayload) {\n    if (this.configuration.onStoreDocument) {\n      this.log(`Store \"${data.documentName}\".`)\n    }\n  }\n\n  async onConnect(data: onConnectPayload) {\n    if (this.configuration.onConnect) {\n      this.log(`New connection to \"${data.documentName}\".`)\n    }\n  }\n\n  async onDisconnect(data: onDisconnectPayload) {\n    if (this.configuration.onDisconnect) {\n      this.log(`Connection to \"${data.documentName}\" closed.`)\n    }\n  }\n\n  async onUpgrade(data: onUpgradePayload) {\n    if (this.configuration.onUpgrade) {\n      this.log('Upgrading connection â€¦')\n    }\n  }\n\n  async onRequest(data: onRequestPayload) {\n    if (this.configuration.onRequest) {\n      this.log(`Incoming HTTP Request to ${data.request.url}`)\n    }\n  }\n\n  async onDestroy(data: onDestroyPayload) {\n    if (this.configuration.onDestroy) {\n      this.log('Shut down.')\n    }\n  }\n\n  private log(message: string) {\n    const date = (new Date()).toISOString()\n    let meta = `${date}`\n\n    if (this.name) {\n      meta = `${this.name} ${meta}`\n    }\n\n    message = `[${meta}] ${message}`\n\n    this.configuration.log(message)\n  }\n}\n"],"names":[],"mappings":"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"}